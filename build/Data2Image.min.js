(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports = { "default": require("core-js/library/fn/object/define-property"), __esModule: true };
},{"core-js/library/fn/object/define-property":4}],2:[function(require,module,exports){
"use strict";

exports["default"] = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

exports.__esModule = true;
},{}],3:[function(require,module,exports){
"use strict";

var _Object$defineProperty = require("babel-runtime/core-js/object/define-property")["default"];

exports["default"] = (function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;

      _Object$defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
})();

exports.__esModule = true;
},{"babel-runtime/core-js/object/define-property":1}],4:[function(require,module,exports){
var $ = require('../../modules/$');
module.exports = function defineProperty(it, key, desc){
  return $.setDesc(it, key, desc);
};
},{"../../modules/$":5}],5:[function(require,module,exports){
var $Object = Object;
module.exports = {
  create:     $Object.create,
  getProto:   $Object.getPrototypeOf,
  isEnum:     {}.propertyIsEnumerable,
  getDesc:    $Object.getOwnPropertyDescriptor,
  setDesc:    $Object.defineProperty,
  setDescs:   $Object.defineProperties,
  getKeys:    $Object.keys,
  getNames:   $Object.getOwnPropertyNames,
  getSymbols: $Object.getOwnPropertySymbols,
  each:       [].forEach
};
},{}],6:[function(require,module,exports){
'use strict';

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

Object.defineProperty(exports, '__esModule', {
	value: true
});

var _common = require('./common');

var Data2Image = (function () {
	function Data2Image(options) {
		_classCallCheck(this, Data2Image);

		this.options = options || {};
		this.elements = [];
		this.instances = 0;
	}

	_createClass(Data2Image, [{
		key: 'addElement',
		value: function addElement(name, type, populate_callback) {
			this.elements.push({ name: name, type: type, fill: populate_callback, id: this.elements.length });
		}
	}, {
		key: 'getTotalElements',
		value: function getTotalElements() {
			return this.elements.length;
		}
	}, {
		key: 'setTotalInstances',
		value: function setTotalInstances(number) {
			this.instances = number;
		}
	}, {
		key: 'getTotalInstances',
		value: function getTotalInstances() {
			return this.instances;
		}
	}, {
		key: 'getTableSize',
		value: function getTableSize() {
			return [this.getTotalInstances(), this.getTotalElements()];
		}
	}, {
		key: 'generate',
		value: function generate() {
			var width = this.getTotalInstances();
			var height = this.getTotalElements();

			var canvas = document.createElement("canvas");
			canvas.width = width;
			canvas.height = height;

			var ctx = canvas.getContext('2d');
			var imageData = ctx.createImageData(width, height);
			var data = imageData.data;
			var index = undefined,
			    y = undefined,
			    x = undefined,
			    r = undefined,
			    i = undefined;
			var channels = 4;
			var value = undefined;

			for (y = 0; y < height; y++) {
				for (x = 0; x < width; x++) {
					index = (y * width + x) * channels;
					var v = this.elements[y].fill(x, this.elements[y]);
					value = (0, _common.encodeValue)(v, this.elements[y].type);
					for (i = 0; i < channels; i++) {
						data[index + i] = value[i];
					}
				}
			}
			ctx.putImageData(imageData, 0, 0);
			return canvas;
		}
	}, {
		key: 'version',
		value: function version() {
			return '0.0.1';
		}
	}]);

	return Data2Image;
})();

exports['default'] = Data2Image;

window.encodeValue = _common.encodeValue;
window.Data2Image = Data2Image;
module.exports = exports['default'];

},{"./common":7,"babel-runtime/helpers/class-call-check":2,"babel-runtime/helpers/create-class":3}],7:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, '__esModule', {
	value: true
});
exports.getRangeFor = getRangeFor;
exports.encodeValue = encodeValue;
function clamp(value, min, max) {
	// return Math.max(min, Math.min(max, value)); // faster??
	return value > max ? max : value < min ? min : value;
}

var ranges = {
	char: [-128, 127],
	uchar: [0, 255],
	int: [-8290688, 8290687],
	uint: [0, 16581375],
	float: [-1, 1],
	ufloat: [0, 1],
	lon: [-180, 180],
	lat: [-90, 90],
	rgb: [0, 255],
	vec2: [0, 1],
	vec3: [0, 1],
	vec4: [0, 1]
};

function getRangeFor(type) {
	return ranges[type];
}

window.getRangeFor = getRangeFor;

function encodeValue(_x, _x2) {
	var _again = true;

	_function: while (_again) {
		var value = _x,
		    type = _x2;
		_again = false;

		if (value < getRangeFor(type)[0] || value > getRangeFor(type)[1]) {
			// console.error (type + ' value ' + value + ' is out of range ' + getRangeFor(type));
			value = clamp(value, getRangeFor(type)[0], getRangeFor(type)[1]);
		}

		if (type === 'uchar') {
			return [Math.floor(value % 255), Math.floor(value % 255), Math.floor(value % 255), 255];
		} else if (type === 'char') {
			_x = value - getRangeFor(type)[0];
			_x2 = 'uchar';
			_again = true;
			continue _function;
		} else if (type === 'uint') {
			return [Math.floor(value % 255), Math.floor(value / 255) % 255, Math.floor(value / (255 * 255)), 255];
		} else if (type === 'int') {
			_x = value - getRangeFor(type)[0];
			_x2 = 'uint';
			_again = true;
			continue _function;
		} else if (type === 'float') {
			_x = .5 + value * .5;
			_x2 = 'ufloat';
			_again = true;
			continue _function;
		} else if (type === 'ufloat') {
			_x = value * 16581375;
			_x2 = 'uint';
			_again = true;
			continue _function;
		} else if (type === 'pos') {
			_x = value;
			_x2 = 'xy';
			_again = true;
			continue _function;
		} else if (type === 'xy' | type === 'vec2') {
			return [Math.floor(value[0] % 255), Math.floor(value[0] / 255) % 255, Math.floor(value[1] % 255), Math.floor(value[1] / 255) % 255];
		} else if (type === 'color') {
			_x = value;
			_x2 = 'rgb';
			_again = true;
			continue _function;
		} else if (type === 'rgb' || type === 'vec3' || type === 'vec4') {
			return [Math.floor(value[0] / getRangeFor(type)[1] * 255), Math.floor(value[1] / getRangeFor(type)[1] * 255), Math.floor(value[2] / getRangeFor(type)[1] * 255), value[3] ? Math.floor(value[3] / 255) : 255];
		}
	}
}

},{}]},{},[6])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
